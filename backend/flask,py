# Importing flask module in the project is mandatory
# An object of Flask class is our WSGI application.
from flask import Flask, render_template, request, jsonify
# Flask constructor takes the name of 
# current module (__name__) as argument.
app = Flask(__name__)

# The route() function of the Flask class is a decorator, 
# which tells the application which URL should call 
# the associated function.
@app.route('/') #hello_world function available in http://127.0.0.1:5000/h webpage note the h
# ‘/’ URL is bound with hello_world() function.
def hello_world():
    return 'Hello World'
@app.route('/bye') #hello_world function available in http://127.0.0.1:5000/h webpage note the h
# ‘/’ URL is bound with hello_world() function.
def bye_world():
    return 'Bye World'
@app.route('/sq',methods=['POST','GET'])
def squarenumber():
    # If method is GET, check if  number is entered 
    # or user has just requested the page.
    # Calculate the square of number and pass it to 
    # answermaths method
    if request.method=='GET':                        #For rendering the first page GET is needed as POST needs some data: done on own
        if request.args.get('num')==None:              #Even request.form works+
            return render_template('index.html')
    if request.method == 'POST':
   # If 'num' is None, the user has requested page the first time
        #if(request.args.get('num') == None): , used in GET for args from url

          # If user clicks on Submit button without 
          # entering number display error
        if(request.form.get('num') == ''):
            return "<html><body> <h1>Invalid number</h1></body></html>"
        else:
          # User has entered a number
          # Fetch the number from args attribute of 
          # request accessing its 'id' from HTML
            number = request.form.get('num')
            sq = int(number) * int(number)
            # pass the result to the answer HTML
            # page using Jinja2 template
            return render_template('ans.html', 
                                   squareofnum=sq, num=number)
@app.route('/process', methods=['POST'])
def process():
    # Parse JSON data from the request
    data = request.get_json()

    # Get the number and calculate the square
    num = int(data['num'])
    square = num * num

    # Return the result as JSON
    return jsonify({'num': num, 'square': square})
# main driver function
if __name__ == '__main__':

    # run() method of Flask class runs the application 
    # on the local development server.
    app.run()                                         #running flask to run a set of webpages, and in their form putting # to send data to running flask

#Flask needs python in main folder, then static folder to have js, css, images, subfolders then files. html files in templates folder